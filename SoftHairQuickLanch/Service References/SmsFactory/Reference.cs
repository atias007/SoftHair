//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoftHairQuickLanch.SmsFactory {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseCredentials", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoftHairQuickLanch.SmsFactory.UserCredentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoftHairQuickLanch.SmsFactory.CustomerCredentials))]
    public partial class BaseCredentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredentials", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities")]
    [System.SerializableAttribute()]
    public partial class UserCredentials : SoftHairQuickLanch.SmsFactory.BaseCredentials {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerCredentials", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities")]
    [System.SerializableAttribute()]
    public partial class CustomerCredentials : SoftHairQuickLanch.SmsFactory.BaseCredentials {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdField, value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailMessage", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    [System.SerializableAttribute()]
    public partial class EmailMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAlternateView[] AlternateViewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAttachment[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAddress[] BccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BodyEncodingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAddress[] CcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailDeliveryNotificationOptions DeliveryNotificationOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAddress FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailHeaderItem[] HeadersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HeadersEncodingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBodyHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailPriority PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAddress[] ReplyToListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAddress SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubjectEncodingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.EmailAddress[] ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAlternateView[] AlternateViews {
            get {
                return this.AlternateViewsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateViewsField, value) != true)) {
                    this.AlternateViewsField = value;
                    this.RaisePropertyChanged("AlternateViews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAttachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAddress[] Bcc {
            get {
                return this.BccField;
            }
            set {
                if ((object.ReferenceEquals(this.BccField, value) != true)) {
                    this.BccField = value;
                    this.RaisePropertyChanged("Bcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BodyEncodingCode {
            get {
                return this.BodyEncodingCodeField;
            }
            set {
                if ((this.BodyEncodingCodeField.Equals(value) != true)) {
                    this.BodyEncodingCodeField = value;
                    this.RaisePropertyChanged("BodyEncodingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAddress[] Cc {
            get {
                return this.CcField;
            }
            set {
                if ((object.ReferenceEquals(this.CcField, value) != true)) {
                    this.CcField = value;
                    this.RaisePropertyChanged("Cc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailDeliveryNotificationOptions DeliveryNotificationOptions {
            get {
                return this.DeliveryNotificationOptionsField;
            }
            set {
                if ((this.DeliveryNotificationOptionsField.Equals(value) != true)) {
                    this.DeliveryNotificationOptionsField = value;
                    this.RaisePropertyChanged("DeliveryNotificationOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAddress From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailHeaderItem[] Headers {
            get {
                return this.HeadersField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadersField, value) != true)) {
                    this.HeadersField = value;
                    this.RaisePropertyChanged("Headers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HeadersEncodingCode {
            get {
                return this.HeadersEncodingCodeField;
            }
            set {
                if ((this.HeadersEncodingCodeField.Equals(value) != true)) {
                    this.HeadersEncodingCodeField = value;
                    this.RaisePropertyChanged("HeadersEncodingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBodyHtml {
            get {
                return this.IsBodyHtmlField;
            }
            set {
                if ((this.IsBodyHtmlField.Equals(value) != true)) {
                    this.IsBodyHtmlField = value;
                    this.RaisePropertyChanged("IsBodyHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailPriority Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAddress[] ReplyToList {
            get {
                return this.ReplyToListField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyToListField, value) != true)) {
                    this.ReplyToListField = value;
                    this.RaisePropertyChanged("ReplyToList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAddress Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubjectEncodingCode {
            get {
                return this.SubjectEncodingCodeField;
            }
            set {
                if ((this.SubjectEncodingCodeField.Equals(value) != true)) {
                    this.SubjectEncodingCodeField = value;
                    this.RaisePropertyChanged("SubjectEncodingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.EmailAddress[] To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailAddress", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    [System.SerializableAttribute()]
    public partial class EmailAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DisplayNameEncodingCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DisplayNameEncodingCode {
            get {
                return this.DisplayNameEncodingCodeField;
            }
            set {
                if ((this.DisplayNameEncodingCodeField.Equals(value) != true)) {
                    this.DisplayNameEncodingCodeField = value;
                    this.RaisePropertyChanged("DisplayNameEncodingCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailAlternateView", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    [System.SerializableAttribute()]
    public partial class EmailAlternateView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream ContentStreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream ContentStream {
            get {
                return this.ContentStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentStreamField, value) != true)) {
                    this.ContentStreamField = value;
                    this.RaisePropertyChanged("ContentStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailAttachment", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    [System.SerializableAttribute()]
    public partial class EmailAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream ContentStreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Text.Encoding NameEncodingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream ContentStream {
            get {
                return this.ContentStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentStreamField, value) != true)) {
                    this.ContentStreamField = value;
                    this.RaisePropertyChanged("ContentStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Text.Encoding NameEncoding {
            get {
                return this.NameEncodingField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEncodingField, value) != true)) {
                    this.NameEncodingField = value;
                    this.RaisePropertyChanged("NameEncoding");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailDeliveryNotificationOptions", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    public enum EmailDeliveryNotificationOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnSuccess = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnFailure = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delay = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Never = 134217728,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailHeaderItem", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    [System.SerializableAttribute()]
    public partial class EmailHeaderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailPriority", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    public enum EmailPriority : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePageDataItem", Namespace="http://schemas.datacontract.org/2004/07/System.Globalization")]
    [System.SerializableAttribute()]
    public partial class CodePageDataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string m_bodyNameField;
        
        private int m_dataIndexField;
        
        private uint m_flagsField;
        
        private string m_headerNameField;
        
        private int m_uiFamilyCodePageField;
        
        private string m_webNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_bodyName {
            get {
                return this.m_bodyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_bodyNameField, value) != true)) {
                    this.m_bodyNameField = value;
                    this.RaisePropertyChanged("m_bodyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_dataIndex {
            get {
                return this.m_dataIndexField;
            }
            set {
                if ((this.m_dataIndexField.Equals(value) != true)) {
                    this.m_dataIndexField = value;
                    this.RaisePropertyChanged("m_dataIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint m_flags {
            get {
                return this.m_flagsField;
            }
            set {
                if ((this.m_flagsField.Equals(value) != true)) {
                    this.m_flagsField = value;
                    this.RaisePropertyChanged("m_flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_headerName {
            get {
                return this.m_headerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_headerNameField, value) != true)) {
                    this.m_headerNameField = value;
                    this.RaisePropertyChanged("m_headerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_uiFamilyCodePage {
            get {
                return this.m_uiFamilyCodePageField;
            }
            set {
                if ((this.m_uiFamilyCodePageField.Equals(value) != true)) {
                    this.m_uiFamilyCodePageField = value;
                    this.RaisePropertyChanged("m_uiFamilyCodePage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_webName {
            get {
                return this.m_webNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_webNameField, value) != true)) {
                    this.m_webNameField = value;
                    this.RaisePropertyChanged("m_webName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFilterOfCustomerServiceCallFdYOpOQC", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Filters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoftHairQuickLanch.SmsFactory.CustomerServiceCallFilter))]
    public partial class BaseFilterOfCustomerServiceCallFdYOpOQC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.LoadOptionTypes LoadOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TakeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.LoadOptionTypes LoadOption {
            get {
                return this.LoadOptionField;
            }
            set {
                if ((this.LoadOptionField.Equals(value) != true)) {
                    this.LoadOptionField = value;
                    this.RaisePropertyChanged("LoadOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Take {
            get {
                return this.TakeField;
            }
            set {
                if ((this.TakeField.Equals(value) != true)) {
                    this.TakeField = value;
                    this.RaisePropertyChanged("Take");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerServiceCallFilter", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.CommonServices.Filters")]
    [System.SerializableAttribute()]
    public partial class CustomerServiceCallFilter : SoftHairQuickLanch.SmsFactory.BaseFilterOfCustomerServiceCallFdYOpOQC {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreatedFrom {
            get {
                return this.DateCreatedFromField;
            }
            set {
                if ((this.DateCreatedFromField.Equals(value) != true)) {
                    this.DateCreatedFromField = value;
                    this.RaisePropertyChanged("DateCreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreatedTo {
            get {
                return this.DateCreatedToField;
            }
            set {
                if ((this.DateCreatedToField.Equals(value) != true)) {
                    this.DateCreatedToField = value;
                    this.RaisePropertyChanged("DateCreatedTo");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadOptionTypes", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Filters")]
    public enum LoadOptionTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Small = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Big = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFilterOfCustomerExceptionFdYOpOQC", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Filters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoftHairQuickLanch.SmsFactory.CustomerExceptionFilter))]
    public partial class BaseFilterOfCustomerExceptionFdYOpOQC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.LoadOptionTypes LoadOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TakeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.LoadOptionTypes LoadOption {
            get {
                return this.LoadOptionField;
            }
            set {
                if ((this.LoadOptionField.Equals(value) != true)) {
                    this.LoadOptionField = value;
                    this.RaisePropertyChanged("LoadOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Take {
            get {
                return this.TakeField;
            }
            set {
                if ((this.TakeField.Equals(value) != true)) {
                    this.TakeField = value;
                    this.RaisePropertyChanged("Take");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerExceptionFilter", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.CommonServices.Filters")]
    [System.SerializableAttribute()]
    public partial class CustomerExceptionFilter : SoftHairQuickLanch.SmsFactory.BaseFilterOfCustomerExceptionFdYOpOQC {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreatedFrom {
            get {
                return this.DateCreatedFromField;
            }
            set {
                if ((this.DateCreatedFromField.Equals(value) != true)) {
                    this.DateCreatedFromField = value;
                    this.RaisePropertyChanged("DateCreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreatedTo {
            get {
                return this.DateCreatedToField;
            }
            set {
                if ((this.DateCreatedToField.Equals(value) != true)) {
                    this.DateCreatedToField = value;
                    this.RaisePropertyChanged("DateCreatedTo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFilterOfAnonymousContactUsFdYOpOQC", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Filters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoftHairQuickLanch.SmsFactory.CustomerContactUsFilter))]
    public partial class BaseFilterOfAnonymousContactUsFdYOpOQC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.LoadOptionTypes LoadOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TakeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.LoadOptionTypes LoadOption {
            get {
                return this.LoadOptionField;
            }
            set {
                if ((this.LoadOptionField.Equals(value) != true)) {
                    this.LoadOptionField = value;
                    this.RaisePropertyChanged("LoadOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Take {
            get {
                return this.TakeField;
            }
            set {
                if ((this.TakeField.Equals(value) != true)) {
                    this.TakeField = value;
                    this.RaisePropertyChanged("Take");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerContactUsFilter", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.CommonServices.Filters")]
    [System.SerializableAttribute()]
    public partial class CustomerContactUsFilter : SoftHairQuickLanch.SmsFactory.BaseFilterOfAnonymousContactUsFdYOpOQC {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreatedFrom {
            get {
                return this.DateCreatedFromField;
            }
            set {
                if ((this.DateCreatedFromField.Equals(value) != true)) {
                    this.DateCreatedFromField = value;
                    this.RaisePropertyChanged("DateCreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreatedTo {
            get {
                return this.DateCreatedToField;
            }
            set {
                if ((this.DateCreatedToField.Equals(value) != true)) {
                    this.DateCreatedToField = value;
                    this.RaisePropertyChanged("DateCreatedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerLicense", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.CommonServices")]
    [System.SerializableAttribute()]
    public partial class CustomerLicense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerStatus {
            get {
                return this.CustomerStatusField;
            }
            set {
                if ((this.CustomerStatusField.Equals(value) != true)) {
                    this.CustomerStatusField = value;
                    this.RaisePropertyChanged("CustomerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Features {
            get {
                return this.FeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.FeaturesField, value) != true)) {
                    this.FeaturesField = value;
                    this.RaisePropertyChanged("Features");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseKey {
            get {
                return this.LicenseKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseKeyField, value) != true)) {
                    this.LicenseKeyField = value;
                    this.RaisePropertyChanged("LicenseKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerServiceCall", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CustomerServiceCall : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.ObjectChangeTracker ChangeTrackerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.DateUpdatedField;
            }
            set {
                if ((this.DateUpdatedField.Equals(value) != true)) {
                    this.DateUpdatedField = value;
                    this.RaisePropertyChanged("DateUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeStampField, value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectChangeTracker", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ObjectChangeTracker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.ExtendedPropertiesDictionary ExtendedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.OriginalValuesDictionary OriginalValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.ObjectState StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.ExtendedPropertiesDictionary ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties {
            get {
                return this.ObjectsAddedToCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsAddedToCollectionPropertiesField, value) != true)) {
                    this.ObjectsAddedToCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsAddedToCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties {
            get {
                return this.ObjectsRemovedFromCollectionPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsRemovedFromCollectionPropertiesField, value) != true)) {
                    this.ObjectsRemovedFromCollectionPropertiesField = value;
                    this.RaisePropertyChanged("ObjectsRemovedFromCollectionProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.OriginalValuesDictionary OriginalValues {
            get {
                return this.OriginalValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalValuesField, value) != true)) {
                    this.OriginalValuesField = value;
                    this.RaisePropertyChanged("OriginalValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.ObjectState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    [System.SerializableAttribute()]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    [System.SerializableAttribute()]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, SoftHairQuickLanch.SmsFactory.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    [System.SerializableAttribute()]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, SoftHairQuickLanch.SmsFactory.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    [System.SerializableAttribute()]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectState", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities")]
    public enum ObjectState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", ItemName="ObjectValue")]
    [System.SerializableAttribute()]
    public class ObjectList : System.Collections.Generic.List<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerException", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CustomerException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.ObjectChangeTracker ChangeTrackerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionText {
            get {
                return this.ExceptionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTextField, value) != true)) {
                    this.ExceptionTextField = value;
                    this.RaisePropertyChanged("ExceptionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnonymousContactUs", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AnonymousContactUs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnotherPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoftHairQuickLanch.SmsFactory.ObjectChangeTracker ChangeTrackerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnotherPhone {
            get {
                return this.AnotherPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AnotherPhoneField, value) != true)) {
                    this.AnotherPhoneField = value;
                    this.RaisePropertyChanged("AnotherPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoftHairQuickLanch.SmsFactory.ObjectChangeTracker ChangeTracker {
            get {
                return this.ChangeTrackerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackerField, value) != true)) {
                    this.ChangeTrackerField = value;
                    this.RaisePropertyChanged("ChangeTracker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.DateUpdatedField;
            }
            set {
                if ((this.DateUpdatedField.Equals(value) != true)) {
                    this.DateUpdatedField = value;
                    this.RaisePropertyChanged("DateUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeStampField, value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVersionQuery", Namespace="http://schemas.datacontract.org/2004/07/SmsFactory.Common.Entities.CommonServices" +
        "")]
    [System.SerializableAttribute()]
    public partial class UpdateVersionQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUpdateNeededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateApplicationUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUpdateNeeded {
            get {
                return this.IsUpdateNeededField;
            }
            set {
                if ((this.IsUpdateNeededField.Equals(value) != true)) {
                    this.IsUpdateNeededField = value;
                    this.RaisePropertyChanged("IsUpdateNeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateApplicationUrl {
            get {
                return this.UpdateApplicationUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateApplicationUrlField, value) != true)) {
                    this.UpdateApplicationUrlField = value;
                    this.RaisePropertyChanged("UpdateApplicationUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmsFactory.ICommonServices")]
    public interface ICommonServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetCustomerUniqueId", ReplyAction="http://tempuri.org/ICommonServices/GetCustomerUniqueIdResponse")]
        string GetCustomerUniqueId(SoftHairQuickLanch.SmsFactory.CustomerCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SendEmail", ReplyAction="http://tempuri.org/ICommonServices/SendEmailResponse")]
        void SendEmail(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.EmailMessage emailMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SendEmailAsync", ReplyAction="http://tempuri.org/ICommonServices/SendEmailAsyncResponse")]
        void SendEmailAsync(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.EmailMessage emailMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/CheckForUpdateVersion", ReplyAction="http://tempuri.org/ICommonServices/CheckForUpdateVersionResponse")]
        SoftHairQuickLanch.SmsFactory.UpdateVersionQuery CheckForUpdateVersion(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SetCustomerVersion", ReplyAction="http://tempuri.org/ICommonServices/SetCustomerVersionResponse")]
        void SetCustomerVersion(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SetCustomerUpToDateVersion", ReplyAction="http://tempuri.org/ICommonServices/SetCustomerUpToDateVersionResponse")]
        void SetCustomerUpToDateVersion(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/CheckCustomerLicense", ReplyAction="http://tempuri.org/ICommonServices/CheckCustomerLicenseResponse")]
        SoftHairQuickLanch.SmsFactory.CustomerLicense CheckCustomerLicense(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/ReportCustomerServiceCall", ReplyAction="http://tempuri.org/ICommonServices/ReportCustomerServiceCallResponse")]
        void ReportCustomerServiceCall(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/UpdateCustomerServiceCall", ReplyAction="http://tempuri.org/ICommonServices/UpdateCustomerServiceCallResponse")]
        void UpdateCustomerServiceCall(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerServiceCall serviceCall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SetCustomerServiceCallStatus", ReplyAction="http://tempuri.org/ICommonServices/SetCustomerServiceCallStatusResponse")]
        void SetCustomerServiceCallStatus(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, int serviceCallId, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetCustomerServiceCalls", ReplyAction="http://tempuri.org/ICommonServices/GetCustomerServiceCallsResponse")]
        SoftHairQuickLanch.SmsFactory.CustomerServiceCall[] GetCustomerServiceCalls(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerServiceCallFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/ReportCustomerException", ReplyAction="http://tempuri.org/ICommonServices/ReportCustomerExceptionResponse")]
        void ReportCustomerException(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, SoftHairQuickLanch.SmsFactory.CustomerException exception);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetCustomerExceptionText", ReplyAction="http://tempuri.org/ICommonServices/GetCustomerExceptionTextResponse")]
        string GetCustomerExceptionText(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, int exceptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetCustomerExceptions", ReplyAction="http://tempuri.org/ICommonServices/GetCustomerExceptionsResponse")]
        SoftHairQuickLanch.SmsFactory.CustomerException[] GetCustomerExceptions(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerExceptionFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/AddAnonymousContactUs", ReplyAction="http://tempuri.org/ICommonServices/AddAnonymousContactUsResponse")]
        void AddAnonymousContactUs(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.AnonymousContactUs contactUs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetAnonymousContactUs", ReplyAction="http://tempuri.org/ICommonServices/GetAnonymousContactUsResponse")]
        SoftHairQuickLanch.SmsFactory.AnonymousContactUs[] GetAnonymousContactUs(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerContactUsFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SetAnonymousContactUsStatus", ReplyAction="http://tempuri.org/ICommonServices/SetAnonymousContactUsStatusResponse")]
        void SetAnonymousContactUsStatus(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, int contactUsId, int status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServicesChannel : SoftHairQuickLanch.SmsFactory.ICommonServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServicesClient : System.ServiceModel.ClientBase<SoftHairQuickLanch.SmsFactory.ICommonServices>, SoftHairQuickLanch.SmsFactory.ICommonServices {
        
        public CommonServicesClient() {
        }
        
        public CommonServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCustomerUniqueId(SoftHairQuickLanch.SmsFactory.CustomerCredentials credentials) {
            return base.Channel.GetCustomerUniqueId(credentials);
        }
        
        public void SendEmail(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.EmailMessage emailMessage) {
            base.Channel.SendEmail(credentials, emailMessage);
        }
        
        public void SendEmailAsync(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.EmailMessage emailMessage) {
            base.Channel.SendEmailAsync(credentials, emailMessage);
        }
        
        public SoftHairQuickLanch.SmsFactory.UpdateVersionQuery CheckForUpdateVersion(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, string version) {
            return base.Channel.CheckForUpdateVersion(credentials, customerUniqueId, version);
        }
        
        public void SetCustomerVersion(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, string version) {
            base.Channel.SetCustomerVersion(credentials, customerUniqueId, version);
        }
        
        public void SetCustomerUpToDateVersion(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId) {
            base.Channel.SetCustomerUpToDateVersion(credentials, customerUniqueId);
        }
        
        public SoftHairQuickLanch.SmsFactory.CustomerLicense CheckCustomerLicense(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId) {
            return base.Channel.CheckCustomerLicense(credentials, customerUniqueId);
        }
        
        public void ReportCustomerServiceCall(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, string description) {
            base.Channel.ReportCustomerServiceCall(credentials, customerUniqueId, description);
        }
        
        public void UpdateCustomerServiceCall(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerServiceCall serviceCall) {
            base.Channel.UpdateCustomerServiceCall(credentials, serviceCall);
        }
        
        public void SetCustomerServiceCallStatus(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, int serviceCallId, int status) {
            base.Channel.SetCustomerServiceCallStatus(credentials, serviceCallId, status);
        }
        
        public SoftHairQuickLanch.SmsFactory.CustomerServiceCall[] GetCustomerServiceCalls(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerServiceCallFilter filter) {
            return base.Channel.GetCustomerServiceCalls(credentials, filter);
        }
        
        public void ReportCustomerException(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, string customerUniqueId, SoftHairQuickLanch.SmsFactory.CustomerException exception) {
            base.Channel.ReportCustomerException(credentials, customerUniqueId, exception);
        }
        
        public string GetCustomerExceptionText(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, int exceptionId) {
            return base.Channel.GetCustomerExceptionText(credentials, exceptionId);
        }
        
        public SoftHairQuickLanch.SmsFactory.CustomerException[] GetCustomerExceptions(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerExceptionFilter filter) {
            return base.Channel.GetCustomerExceptions(credentials, filter);
        }
        
        public void AddAnonymousContactUs(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.AnonymousContactUs contactUs) {
            base.Channel.AddAnonymousContactUs(credentials, contactUs);
        }
        
        public SoftHairQuickLanch.SmsFactory.AnonymousContactUs[] GetAnonymousContactUs(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, SoftHairQuickLanch.SmsFactory.CustomerContactUsFilter filter) {
            return base.Channel.GetAnonymousContactUs(credentials, filter);
        }
        
        public void SetAnonymousContactUsStatus(SoftHairQuickLanch.SmsFactory.UserCredentials credentials, int contactUsId, int status) {
            base.Channel.SetAnonymousContactUsStatus(credentials, contactUsId, status);
        }
    }
}
